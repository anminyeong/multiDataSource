server.port = 9090



# Local DB Config (H2 DB)
local.h2.server.port = 9911
spring.local.datasource.url=jdbc:h2:tcp://localhost:${local.h2.server.port}/./internal/spfdb;AUTO_SERVER=TRUE;TRACE_LEVEL_FILE=0;CACHE_SIZE=32768;LOCK_MODE=0;LOB_TIMEOUT=500;
spring.local.datasource.username = sp
spring.local.datasource.password = sp1234!!
spring.local.datasource.driver-class-name= org.h2.Driver
spring.local.datasource.hibernate.dialect=org.hibernate.dialect.H2Dialect



# Remote DB Config (ORACLE DB)
spring.remote.datasource.url = jdbc:oracle:thin:@localhost:1521:orcl
spring.remote.datasource.username = c##demo
spring.remote.datasource.password = demo
spring.remote.datasource.driver-class-name= oracle.jdbc.OracleDriver


#애플리케이션 시작 시에는 기존 데이터베이스 스키마를 유지하면서, 새로운 테이블이나 변경된 엔티티를 추가합니다. 기존 테이블에 대한 수정은 하지 않습니다.
spring.jpa.hibernate.ddl-auto= validate
spring.jpa.generate-ddl= true
spring.jpa.properties.show-sql: true

spring.h2.console.enabled= true
spring.h2.console.settings.web-allow-others= true

logging.level.org.hibernate.type.descriptor.sql= INFO

redu.remote.ip= 127.0.0.1
redu.remote.port= 9097
redu.local.port = 9097

# Logging Config
logging.config = file:config/logback-spring.xml






